name: Build and Run Elgg

on:
  push:
    branches:
      - main

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build Docker image
        run: docker-compose build

      - name: Run Elgg container
        run: docker-compose up -d

      - name: Wait for service to become available
        run: |
          max_attempts=5
          retry_interval=10
          service_url=http://localhost
  
          for ((attempt=1; attempt<=max_attempts; attempt++)); do
            echo "Checking service availability (Attempt $attempt of $max_attempts)..."
            status_code=$(curl -s -o /dev/null -w "%{http_code}" "$service_url")
  
            if [[ "$status_code" -eq 200 ]]; then
              echo "Service is available."
              exit 0
            else
              echo "Service is not available yet. Status code: $status_code."
              if [[ $attempt -lt $max_attempts ]]; then
                echo "Waiting $retry_interval seconds before retrying..."
                sleep $retry_interval
              else
                echo "Max attempts reached. Unable to confirm service availability."
                # Opsi untuk debugging: Tampilkan respons untuk investigasi lebih lanjut.
                echo "Attempting final curl command for more detailed response:"
                curl -s "$service_url"
                exit 1
              fi
            fi
          done
        shell: bash
          
      # - name:  Periksa Log
      #   run: man curl | grep "exit code 56"

    #   - name: Check Elgg availability
    #     run: |
    #       status_code=$(curl -s -o /dev/null -w "%{http_code}" http://localhost)
    #       if [ $status_code -eq 200 ]; then
    #         echo "Elgg is running successfully."
    #       else
    #         echo "Failed to access Elgg. Status code: $status_code"
    #         exit 1
    #       fi

      # Add additional steps for functional testing if needed
      # - name: Run Elgg functional tests
      #   run: |
      #     # Your functional tests commands here
